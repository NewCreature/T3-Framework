T3F Issues
----------

[ ]Fix project creation/upgrade/pull system. Should include extras.

[ ]Add input module.

   [ ]Should handle construction of generic input devices.

      [ ]Input device construction API should be simple for basic use cases.
         Consider providing shortcut functions for typical input types, e.g.
         't3f_create_input_handler(T3F_INPUT_STANDARD_GAMEPAD)'.

   [ ]Should handle mapping of gamepads through various APIs.

   [ ]Should be configurable. Input should not be limited to coming from a
      single device.
   
   [ ]Use SteamInput if available.

      [ ]SteamInput provides better handling of gamepads than Allegro. We
         should handle gamepad support through SteamInput if it is available.

         [ ]See if we can use 'dlopen()'/'LoadLibrary()' to dynamically handle
            choosing an input handling method. If SteamInput is available, we
            should 

[ ]Add achievements module.

   [ ]Handle achievements internally.

      [ ]API should allow constructing a set of achievements at program startup.

      [ ]API should allow updating achievement state at arbitrary locations in
         game code.

   [ ]Use SteamUserStats if available.

[X]Only build PhysFS with ZIP support. One or more of the other archive readers
   in PhysFS causes a crash on Android. We only need ZIP anyway.

[X]Look into building custom PNG loader/saver using spng. This may be required
   to get Linux static builds working fully. Currently, there is a crash issue
   when using static libpng if the user tries to use a native file dialog. We
   would only use this on Linux builds by default. The user shouldn't notice a
   difference since T3F would register the loader/saver with Allegro.

   Alternatively, we could just build a prefixed libpng and supply our own
   loader saver routines and register those instead of using Allegro's built-in
   PNG support. We could just copy Allegro's PNG handler code and modify it to
   use the prefixed libpng symbols.

   [X]Used libpng reference library with suffix to work around issue.

[ ]Automatically handle Windows->UTF-8 conversion for strings passed through
   compiler flags. I think extended ASCII might map correctly to UTF-8
   characters 128-255.

[X]Reorganize template build scripts. The makefile.* scripts should be in a
   scripts folder instead of src. The main Makefile and makefile.defines
   should be in the root of the project. Ideally, src will just contain the
   project's source code files.

   [X]I'm not sure if this is possible without making the scripts more
      convoluted. If we can get the scripts to execute with src as the working
      folder, then it should work without having to change how we write our
      definitions in makefile.defines.

[ ]Define T3F_OBJECTS in build scripts to include all T3F object files for the
   build platform. If there are platform specific objects, these should be
   included here also. We can probably define T3F_CORE_OBJECTS to be all
   objects for every platform and T3F_PLATFORM_OBJECTS to be objects for the
   build platform.

[ ]Define T3F_LIBRARIES in build scripts to include all libraries needed for
   T3F to work.

[ ]See about using pkg-config on all platforms that support it so we can
   simplify our build scripts.

   [ ]Using pkg-config on MacOS does not include the needed frameworks.

   [ ]We should define our depend libraries in each platform-specific build
      script (T3F_PLATFORM_LIBRARIES) and reference that from the common build
      script. Currently, we are linking the dependencies twice on the static
      Linux build.

[ ]Update Debian packaging to use Allegro 5.2 libraries from the repositories.

   [ ]Dependency library names:

      liballegro5.2
      liballegro-acodec5.2
      liballegro-audio5.2
      liballegro-dialog5.2
      liballegro-image5.2
      liballegro-physfs5.2
      liballegro-ttf5.2

   [ ]This will make Ubuntu 18.04 the oldest supported version.

   [ ]We may provide a static 32-bit build for use on older systems. We'll still
      support creating a static build in the framework. Presumably, if a user
      is on 64-bit they will be using a recent version of Ubuntu.

   [ ]We should probably create a separate script file for handling Debian
      packaging.

   [ ]We might be able to combine the static and dynamic Linux scripts and use
      configuration options to determine which to build. The default would be to
      build the dynamic version.

      [ ]ALLEGRO_SUFFIX would need to be configurable from the configuration
         file.

      [ ]pkg-config arguments should be configurable from the configuration
         file.

[ ]Define a platform name from the platform-specific build script that can be
   used when naming the binary package.
